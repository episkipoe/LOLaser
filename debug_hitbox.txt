//if (global.attack_cooldown > 0)
//{
    with (Player)
    {
        if (sprite_index == PlayerAttack_R || sprite_index == Player_R)
        {
            attack_cx = x + sprite_width + global.attack_distance ;
        } else
        {
            attack_cx = x - global.attack_distance;
        }
        attack_cy = y + sprite_height / 2;
        
        draw_set_color(c_aqua);
/*		
		if (variable_local_exists("bx")) {
			draw_text(x, y, string(bx) + ", " + string(by));
		}
		*/
	//draw_point(attack_cx, attack_cy);
    }
//}

//draw_text(view_xview[view_current] + 100, view_yview[view_current], string(global.attack_cooldown));
            
with (Enemy)
{
    draw_text(x, y, string(hit_points));
	if (variable_local_exists("dx")) {
		draw_text(x, y + 20, string(dx) + ", " + string(dy));
	}
/*
    draw_text(x, y + 20, string(attack_cooldown));
	if (variable_local_exists("attack_cx")){ //Lazy way to ignore being called before first step
		draw_line(x + sprite_width / 2, y + sprite_height / 2, attack_cx, attack_cy);
	}
*/
}
